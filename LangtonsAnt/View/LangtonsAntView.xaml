<Window x:Class="LangtonsAnt.View.LangtonsAntView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:common="clr-namespace:LangtonsAnt.Common"
        xmlns:local="clr-namespace:LangtonsAnt.View"
        mc:Ignorable="d"
        Title="LangtonsAntView" Height="500" Width="500">
    <Window.Resources>
        <common:EnumToBooleanConverter x:Key="enumToBoolConverter"></common:EnumToBooleanConverter>
        <Style x:Key="cellStyle" TargetType="{x:Type Border}">
            <Style.Setters>
                <Setter Property="BorderBrush" Value="Black"></Setter>
                <Setter Property="BorderThickness" Value="0.5"></Setter>
            </Style.Setters>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CellColour}" Value="White">
                    <Setter Property="Background" Value="White"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CellColour}" Value="Black">
                    <Setter Property="Background" Value="Black"></Setter>
                </DataTrigger>
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsKeyboardFocused" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Fill" Value="LightGreen" />
                    </MultiTrigger.Setters>
                </MultiTrigger>-->
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="WhiteSmoke">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Margin="1,1,1,1" Background="LightGreen" Content="START" Command="{Binding StartGameCommand}"></Button>
            <Button Grid.Column="1" Margin="1,1,1,1" Background="OrangeRed" Content="STOP" Command="{Binding StopGameCommand}"></Button>
            <Button Grid.Column="2" Margin="1,1,1,1" Background="SkyBlue" Content="STEP" Command="{Binding StepGameCommand}"></Button>
            <Button Grid.Column="3" Margin="1,1,1,1" Background="Orange" Content="RESET" Command="{Binding ResetGameCommand}"></Button>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="60"></ColumnDefinition>
                <ColumnDefinition Width="60"></ColumnDefinition>
                <ColumnDefinition Width="60"></ColumnDefinition>
                <ColumnDefinition Width="60"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label>Start Direction:</Label>
            <RadioButton Grid.Column="1" Margin="1,1,1,1" 
                         HorizontalAlignment="Center" VerticalAlignment="Center" 
                         Content="UP"
                         IsChecked="{Binding Path=Grid.AntDirection, Mode=TwoWay, Converter={StaticResource enumToBoolConverter}, ConverterParameter=Up}">
            </RadioButton>
            <RadioButton Grid.Column="2" Margin="1,1,1,1" 
                         HorizontalAlignment="Center" VerticalAlignment="Center" 
                         Content="DOWN" 
                         IsChecked="{Binding Path=Grid.AntDirection, Mode=TwoWay, Converter={StaticResource enumToBoolConverter}, ConverterParameter=Down}">
            </RadioButton>
            <RadioButton Grid.Column="3" Margin="1,1,1,1" 
                         HorizontalAlignment="Center" VerticalAlignment="Center" 
                         Content="LEFT" 
                         IsChecked="{Binding Path=Grid.AntDirection, Mode=TwoWay, Converter={StaticResource enumToBoolConverter}, ConverterParameter=Left}">
            </RadioButton>
            <RadioButton Grid.Column="4" Margin="1,1,1,1" 
                         HorizontalAlignment="Center" VerticalAlignment="Center" 
                         Content="RIGHT" 
                         IsChecked="{Binding Path=Grid.AntDirection, Mode=TwoWay, Converter={StaticResource enumToBoolConverter}, ConverterParameter=Right}">
            </RadioButton>
        </Grid>
        <ItemsControl Grid.Row="2" Margin="1,1,1,1" 
                      Name="cellGrid" 
                      ItemsSource="{Binding Grid.GridCells, Mode=OneWay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding Grid.GridWidthCells, Mode=OneWay}" Rows="{Binding Grid.GridHeightCells, Mode=OneWay}"></UniformGrid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Style="{StaticResource cellStyle}">
                        <Label></Label>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
